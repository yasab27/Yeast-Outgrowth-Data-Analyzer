blankVector <- testWellDF[,"BLANK"]
#Getting Matrix from Data Frame
testWellMatrix <- data.matrix(testWellDF)
testWellMatrix
#Creating normalized matrix to Contain post blank subtraction data
normalizedTestWellMatrix <- testWellMatrix
#Iterating through all rows and substracting out all of the blank values
for(row in 1:nrow(testWellMatrix))
{
for(col in 2:ncol(testWellMatrix))
{
normalizedTestWellMatrix[row,col] <- testWellMatrix[row,col] - blankVector[row]
}
}
#Name Vector containing the strains of yeast/deletino
nameVector <- c("BY4743","DOA1","ERG5","EDE1","MIR1")
#Normalized testWellMatrix where information
normalizedTestWellMatrix
for(i in 2:(ncol(testWellMatrix)-1))
{
plot(normalizedTestWellMatrix[,1], normalizedTestWellMatrix[,i], main=paste("Well 1",(i-1)),
xlab="Time (s) ", ylab="Concentration (OD)", pch=1)
}
#Normalized averageNTWS where the triplicate samples are joined together
averageNTWS <- matrix(nrow=nrow(normalizedTestWellMatrix),ncol=ncol(normalizedTestWellMatrix)/3 + 1,byrow=TRUE)
dimnames(averageNTWS) = list(1:nrow(averageNTWS),c("Time",nameVector))
#First column is time vector
for(i in 1:nrow(normalizedTestWellMatrix))
{
averageNTWS[i,1] <- normalizedTestWellMatrix[i,1]
}
#Inputing averaged triplicate data:
for(row in 1:nrow(averageNTWS))
{
for(col in 2:ncol(averageNTWS))
{
for(counter in 1:ncol(averageNTWS)-1)
averageNTWS[row,col] = (normalizedTestWellMatrix[row,col] + normalizedTestWellMatrix[row,col+ 1*counter] + normalizedTestWellMatrix[row,col+2*counter])/3
}
}
averageNTWS
plotVector <- list(1:ncol(averageNTWS)-1)
for(i in 2:(ncol(averageNTWS)))
{
plot(averageNTWS[,1], averageNTWS[,i], main = paste("Strain", nameVector[i-1]),
xlab="Time (s) ", ylab="Concentration (OD)", pch=1)
plotVector[i-1] <- recordPlot()
plot.new()
}
plotVector
}
day1Plots <- generateDayGrowthCurves("Day2.txt")
day1Plots[1]
"hello world"
# Test Well 1
generateDayGrowthCurves <- function(file)
{
#Importing Data from DAT 2 Document
setwd("D:/R Stuff/Test Data")
testWellDF = read.table(file,  fill= TRUE, header= TRUE)
#Initial Data Frame
testWellDF
#Getting initial times as character
timeVector <- testWellDF[,"Time"]
timeVectorCha <- as.character(timeVector)
#Converting characters to numeric times in seconds
numericTimeVector <- sapply(strsplit(timeVectorCha,":"),
function(x) {
x <- as.numeric(x)
3600*x[1]+60*x[2] +x[3]
}
)
numericTimeVector
#Convert the time column into pure seconds format
testWellDF$Time <- numericTimeVector
testWellDF
#Getting blank vector
blankVector <- testWellDF[,"BLANK"]
#Getting Matrix from Data Frame
testWellMatrix <- data.matrix(testWellDF)
testWellMatrix
#Creating normalized matrix to Contain post blank subtraction data
normalizedTestWellMatrix <- testWellMatrix
#Iterating through all rows and substracting out all of the blank values
for(row in 1:nrow(testWellMatrix))
{
for(col in 2:ncol(testWellMatrix))
{
normalizedTestWellMatrix[row,col] <- testWellMatrix[row,col] - blankVector[row]
}
}
#Name Vector containing the strains of yeast/deletino
nameVector <- c("BY4743","DOA1","ERG5","EDE1","MIR1")
#Normalized testWellMatrix where information
normalizedTestWellMatrix
for(i in 2:(ncol(testWellMatrix)-1))
{
plot(normalizedTestWellMatrix[,1], normalizedTestWellMatrix[,i], main=paste("Well 1",(i-1)),
xlab="Time (s) ", ylab="Concentration (OD)", pch=1)
}
#Normalized averageNTWS where the triplicate samples are joined together
averageNTWS <- matrix(nrow=nrow(normalizedTestWellMatrix),ncol=ncol(normalizedTestWellMatrix)/3 + 1,byrow=TRUE)
dimnames(averageNTWS) = list(1:nrow(averageNTWS),c("Time",nameVector))
#First column is time vector
for(i in 1:nrow(normalizedTestWellMatrix))
{
averageNTWS[i,1] <- normalizedTestWellMatrix[i,1]
}
#Inputing averaged triplicate data:
for(row in 1:nrow(averageNTWS))
{
for(col in 2:ncol(averageNTWS))
{
for(counter in 1:ncol(averageNTWS)-1)
averageNTWS[row,col] = (normalizedTestWellMatrix[row,col] + normalizedTestWellMatrix[row,col+ 1*counter] + normalizedTestWellMatrix[row,col+2*counter])/3
}
}
averageNTWS
plotVector <- list(1:ncol(averageNTWS)-1)
for(i in 2:(ncol(averageNTWS)))
{
plot(averageNTWS[,1], averageNTWS[,i], main = paste("Strain", nameVector[i-1]),
xlab="Time (s) ", ylab="Concentration (OD)", pch=1)
plotVector[i-1] <- recordPlot()
plot.new()
}
plotVector
}
day1Plots <- generateDayGrowthCurves("Day2.txt")
day1Plots[1]
"hello world"
# Test Well 1
generateDayGrowthCurves <- function(file)
{
#Importing Data from DAT 2 Document
setwd("D:/R Stuff/Test Data")
testWellDF = read.table(file,  fill= TRUE, header= TRUE)
#Initial Data Frame
testWellDF
#Getting initial times as character
timeVector <- testWellDF[,"Time"]
timeVectorCha <- as.character(timeVector)
#Converting characters to numeric times in seconds
numericTimeVector <- sapply(strsplit(timeVectorCha,":"),
function(x) {
x <- as.numeric(x)
3600*x[1]+60*x[2] +x[3]
}
)
numericTimeVector
#Convert the time column into pure seconds format
testWellDF$Time <- numericTimeVector
testWellDF
#Getting blank vector
blankVector <- testWellDF[,"BLANK"]
#Getting Matrix from Data Frame
testWellMatrix <- data.matrix(testWellDF)
testWellMatrix
#Creating normalized matrix to Contain post blank subtraction data
normalizedTestWellMatrix <- testWellMatrix
#Iterating through all rows and substracting out all of the blank values
for(row in 1:nrow(testWellMatrix))
{
for(col in 2:ncol(testWellMatrix))
{
normalizedTestWellMatrix[row,col] <- testWellMatrix[row,col] - blankVector[row]
}
}
#Name Vector containing the strains of yeast/deletino
nameVector <- c("BY4743","DOA1","ERG5","EDE1","MIR1")
#Normalized testWellMatrix where information
normalizedTestWellMatrix
for(i in 2:(ncol(testWellMatrix)-1))
{
plot(normalizedTestWellMatrix[,1], normalizedTestWellMatrix[,i], main=paste("Well 1",(i-1)),
xlab="Time (s) ", ylab="Concentration (OD)", pch=1)
}
#Normalized averageNTWS where the triplicate samples are joined together
averageNTWS <- matrix(nrow=nrow(normalizedTestWellMatrix),ncol=ncol(normalizedTestWellMatrix)/3 + 1,byrow=TRUE)
dimnames(averageNTWS) = list(1:nrow(averageNTWS),c("Time",nameVector))
#First column is time vector
for(i in 1:nrow(normalizedTestWellMatrix))
{
averageNTWS[i,1] <- normalizedTestWellMatrix[i,1]
}
#Inputing averaged triplicate data:
for(row in 1:nrow(averageNTWS))
{
for(col in 2:ncol(averageNTWS))
{
for(counter in 1:ncol(averageNTWS)-1)
averageNTWS[row,col] = (normalizedTestWellMatrix[row,col] + normalizedTestWellMatrix[row,col+ 1*counter] + normalizedTestWellMatrix[row,col+2*counter])/3
}
}
averageNTWS
plotVector <- list(1:ncol(averageNTWS)-1)
for(i in 2:(ncol(averageNTWS)))
{
plot(averageNTWS[,1], averageNTWS[,i], main = paste("Strain", nameVector[i-1]),
xlab="Time (s) ", ylab="Concentration (OD)", pch=1)
plotVector[i-1] <- recordPlot()
}
plotVector
}
day1Plots <- generateDayGrowthCurves("Day2.txt")
day1Plots[1]
"hello world"
# Test Well 1
generateDayGrowthCurves <- function(file)
{
#Importing Data from DAT 2 Document
setwd("D:/R Stuff/Test Data")
testWellDF = read.table(file,  fill= TRUE, header= TRUE)
#Initial Data Frame
testWellDF
#Getting initial times as character
timeVector <- testWellDF[,"Time"]
timeVectorCha <- as.character(timeVector)
#Converting characters to numeric times in seconds
numericTimeVector <- sapply(strsplit(timeVectorCha,":"),
function(x) {
x <- as.numeric(x)
3600*x[1]+60*x[2] +x[3]
}
)
numericTimeVector
#Convert the time column into pure seconds format
testWellDF$Time <- numericTimeVector
testWellDF
#Getting blank vector
blankVector <- testWellDF[,"BLANK"]
#Getting Matrix from Data Frame
testWellMatrix <- data.matrix(testWellDF)
testWellMatrix
#Creating normalized matrix to Contain post blank subtraction data
normalizedTestWellMatrix <- testWellMatrix
#Iterating through all rows and substracting out all of the blank values
for(row in 1:nrow(testWellMatrix))
{
for(col in 2:ncol(testWellMatrix))
{
normalizedTestWellMatrix[row,col] <- testWellMatrix[row,col] - blankVector[row]
}
}
#Name Vector containing the strains of yeast/deletino
nameVector <- c("BY4743","DOA1","ERG5","EDE1","MIR1")
#Normalized testWellMatrix where information
normalizedTestWellMatrix
#for(i in 2:(ncol(testWellMatrix)-1))
#{
#plot(normalizedTestWellMatrix[,1], normalizedTestWellMatrix[,i], main=paste("Well 1",(i-1)),
#    xlab="Time (s) ", ylab="Concentration (OD)", pch=1)
#}
#Normalized averageNTWS where the triplicate samples are joined together
averageNTWS <- matrix(nrow=nrow(normalizedTestWellMatrix),ncol=ncol(normalizedTestWellMatrix)/3 + 1,byrow=TRUE)
dimnames(averageNTWS) = list(1:nrow(averageNTWS),c("Time",nameVector))
#First column is time vector
for(i in 1:nrow(normalizedTestWellMatrix))
{
averageNTWS[i,1] <- normalizedTestWellMatrix[i,1]
}
#Inputing averaged triplicate data:
for(row in 1:nrow(averageNTWS))
{
for(col in 2:ncol(averageNTWS))
{
for(counter in 1:ncol(averageNTWS)-1)
averageNTWS[row,col] = (normalizedTestWellMatrix[row,col] + normalizedTestWellMatrix[row,col+ 1*counter] + normalizedTestWellMatrix[row,col+2*counter])/3
}
}
averageNTWS
plotVector <- list(1:ncol(averageNTWS)-1)
for(i in 2:(ncol(averageNTWS)))
{
plot(averageNTWS[,1], averageNTWS[,i], main = paste("Strain", nameVector[i-1]),
xlab="Time (s) ", ylab="Concentration (OD)", pch=1)
plotVector[i-1] <- recordPlot()
}
plotVector
}
day1Plots <- generateDayGrowthCurves("Day2.txt")
day1Plots[1]
"hello world"
# Test Well 1
generateDayGrowthCurves <- function(file)
{
#Importing Data from DAT 2 Document
setwd("D:/R Stuff/Test Data")
testWellDF = read.table(file,  fill= TRUE, header= TRUE)
#Initial Data Frame
testWellDF
#Getting initial times as character
timeVector <- testWellDF[,"Time"]
timeVectorCha <- as.character(timeVector)
#Converting characters to numeric times in seconds
numericTimeVector <- sapply(strsplit(timeVectorCha,":"),
function(x) {
x <- as.numeric(x)
3600*x[1]+60*x[2] +x[3]
}
)
numericTimeVector
#Convert the time column into pure seconds format
testWellDF$Time <- numericTimeVector
testWellDF
#Getting blank vector
blankVector <- testWellDF[,"BLANK"]
#Getting Matrix from Data Frame
testWellMatrix <- data.matrix(testWellDF)
testWellMatrix
#Creating normalized matrix to Contain post blank subtraction data
normalizedTestWellMatrix <- testWellMatrix
#Iterating through all rows and substracting out all of the blank values
for(row in 1:nrow(testWellMatrix))
{
for(col in 2:ncol(testWellMatrix))
{
normalizedTestWellMatrix[row,col] <- testWellMatrix[row,col] - blankVector[row]
}
}
#Name Vector containing the strains of yeast/deletino
nameVector <- c("BY4743","DOA1","ERG5","EDE1","MIR1")
#Normalized testWellMatrix where information
normalizedTestWellMatrix
#for(i in 2:(ncol(testWellMatrix)-1))
#{
#plot(normalizedTestWellMatrix[,1], normalizedTestWellMatrix[,i], main=paste("Well 1",(i-1)),
#    xlab="Time (s) ", ylab="Concentration (OD)", pch=1)
#}
#Normalized averageNTWS where the triplicate samples are joined together
averageNTWS <- matrix(nrow=nrow(normalizedTestWellMatrix),ncol=ncol(normalizedTestWellMatrix)/3 + 1,byrow=TRUE)
dimnames(averageNTWS) = list(1:nrow(averageNTWS),c("Time",nameVector))
#First column is time vector
for(i in 1:nrow(normalizedTestWellMatrix))
{
averageNTWS[i,1] <- normalizedTestWellMatrix[i,1]
}
#Inputing averaged triplicate data:
for(row in 1:nrow(averageNTWS))
{
for(col in 2:ncol(averageNTWS))
{
for(counter in 1:ncol(averageNTWS)-1)
averageNTWS[row,col] = (normalizedTestWellMatrix[row,col] + normalizedTestWellMatrix[row,col+ 1*counter] + normalizedTestWellMatrix[row,col+2*counter])/3
}
}
averageNTWS
plotVector <- list(1:ncol(averageNTWS)-1)
for(i in 2:(ncol(averageNTWS)))
{
plot(averageNTWS[,1], averageNTWS[,i], main = paste("Strain", nameVector[i-1]),
xlab="Time (s) ", ylab="Concentration (OD)", pch=1)
plotVector[i-1] <- recordPlot()
}
plotVector
}
day1Plots <- generateDayGrowthCurves("Day2.txt")
day1Plots[1]
"hello world"
# Test Well 1
generateDayGrowthCurves <- function(file)
{
#Importing Data from DAT 2 Document
setwd("D:/R Stuff/Test Data")
testWellDF = read.table(file,  fill= TRUE, header= TRUE)
#Initial Data Frame
testWellDF
#Getting initial times as character
timeVector <- testWellDF[,"Time"]
timeVectorCha <- as.character(timeVector)
#Converting characters to numeric times in seconds
numericTimeVector <- sapply(strsplit(timeVectorCha,":"),
function(x) {
x <- as.numeric(x)
3600*x[1]+60*x[2] +x[3]
}
)
numericTimeVector
#Convert the time column into pure seconds format
testWellDF$Time <- numericTimeVector
testWellDF
#Getting blank vector
blankVector <- testWellDF[,"BLANK"]
#Getting Matrix from Data Frame
testWellMatrix <- data.matrix(testWellDF)
testWellMatrix
#Creating normalized matrix to Contain post blank subtraction data
normalizedTestWellMatrix <- testWellMatrix
#Iterating through all rows and substracting out all of the blank values
for(row in 1:nrow(testWellMatrix))
{
for(col in 2:ncol(testWellMatrix))
{
normalizedTestWellMatrix[row,col] <- testWellMatrix[row,col] - blankVector[row]
}
}
#Name Vector containing the strains of yeast/deletino
nameVector <- c("BY4743","DOA1","ERG5","EDE1","MIR1")
#Normalized testWellMatrix where information
normalizedTestWellMatrix
#for(i in 2:(ncol(testWellMatrix)-1))
#{
#plot(normalizedTestWellMatrix[,1], normalizedTestWellMatrix[,i], main=paste("Well 1",(i-1)),
#    xlab="Time (s) ", ylab="Concentration (OD)", pch=1)
#}
#Normalized averageNTWS where the triplicate samples are joined together
averageNTWS <- matrix(nrow=nrow(normalizedTestWellMatrix),ncol=ncol(normalizedTestWellMatrix)/3 + 1,byrow=TRUE)
dimnames(averageNTWS) = list(1:nrow(averageNTWS),c("Time",nameVector))
#First column is time vector
for(i in 1:nrow(normalizedTestWellMatrix))
{
averageNTWS[i,1] <- normalizedTestWellMatrix[i,1]
}
#Inputing averaged triplicate data:
for(row in 1:nrow(averageNTWS))
{
for(col in 2:ncol(averageNTWS))
{
for(counter in 1:ncol(averageNTWS)-1)
averageNTWS[row,col] = (normalizedTestWellMatrix[row,col] + normalizedTestWellMatrix[row,col+ 1*counter] + normalizedTestWellMatrix[row,col+2*counter])/3
}
}
averageNTWS
plotVector <- list(1:ncol(averageNTWS)-1)
for(i in 2:(ncol(averageNTWS)))
{
plot(averageNTWS[,1], averageNTWS[,i], main = paste("Strain", nameVector[i-1]),
xlab="Time (s) ", ylab="Concentration (OD)", pch=1)
plotVector[i-1] <- recordPlot()
}
plotVector
}
day1Plots <- generateDayGrowthCurves("Day2.txt")
day1Plots[1]
#Initial Data Frame
testWellDF
"hello world"
# Test Well 1
generateDayGrowthCurves <- function(file)
{
#Importing Data from DAT 2 Document
setwd("D:/R Stuff/Test Data")
testWellDF = read.table(file,  fill= TRUE, header= TRUE)
#Initial Data Frame
testWellDF
#Getting initial times as character
timeVector <- testWellDF[,"Time"]
timeVectorCha <- as.character(timeVector)
#Converting characters to numeric times in seconds
numericTimeVector <- sapply(strsplit(timeVectorCha,":"),
function(x) {
x <- as.numeric(x)
3600*x[1]+60*x[2] +x[3]
}
)
numericTimeVector
#Convert the time column into pure seconds format
testWellDF$Time <- numericTimeVector
testWellDF
#Getting blank vector
blankVector <- testWellDF[,"BLANK"]
#Getting Matrix from Data Frame
testWellMatrix <- data.matrix(testWellDF)
testWellMatrix
#Creating normalized matrix to Contain post blank subtraction data
normalizedTestWellMatrix <- testWellMatrix
#Iterating through all rows and substracting out all of the blank values
for(row in 1:nrow(testWellMatrix))
{
for(col in 2:ncol(testWellMatrix))
{
normalizedTestWellMatrix[row,col] <- testWellMatrix[row,col] - blankVector[row]
}
}
#Name Vector containing the strains of yeast/deletino
nameVector <- c("BY4743","DOA1","ERG5","EDE1","MIR1")
#Normalized testWellMatrix where information
normalizedTestWellMatrix
#for(i in 2:(ncol(testWellMatrix)-1))
#{
#plot(normalizedTestWellMatrix[,1], normalizedTestWellMatrix[,i], main=paste("Well 1",(i-1)),
#    xlab="Time (s) ", ylab="Concentration (OD)", pch=1)
#}
#Normalized averageNTWS where the triplicate samples are joined together
averageNTWS <- matrix(nrow=nrow(normalizedTestWellMatrix),ncol=ncol(normalizedTestWellMatrix)/3 + 1,byrow=TRUE)
dimnames(averageNTWS) = list(1:nrow(averageNTWS),c("Time",nameVector))
#First column is time vector
for(i in 1:nrow(normalizedTestWellMatrix))
{
averageNTWS[i,1] <- normalizedTestWellMatrix[i,1]
}
#Inputing averaged triplicate data:
for(row in 1:nrow(averageNTWS))
{
for(col in 2:ncol(averageNTWS))
{
for(counter in 1:ncol(averageNTWS)-1)
averageNTWS[row,col] = (normalizedTestWellMatrix[row,col] + normalizedTestWellMatrix[row,col+ 1*counter] + normalizedTestWellMatrix[row,col+2*counter])/3
}
}
averageNTWS
plotVector <- list(1:ncol(averageNTWS)-1)
for(i in 2:(ncol(averageNTWS)))
{
plot(averageNTWS[,1], averageNTWS[,i], main = paste("Strain", nameVector[i-1]),
xlab="Time (s) ", ylab="Concentration (OD)", pch=1)
plotVector[i-1] <- recordPlot()
}
plotVector
}
day1Plots <- generateDayGrowthCurves("Day2.txt")
day1Plots[1]
